{"version":3,"sources":["modules/auth/context/authContext.js","RutaPrivada.js","modules/admin/components/AdminHeader.js","modules/admin/screens/dashboard/AdminDashboardScreen.js","modules/admin/screens/pedidos/AdminPedidosScreen.js","environments/environmets.js","services/platosService.js","services/categoriasService.js","modules/admin/screens/platos/components/AdminPlatosForm.js","modules/admin/screens/platos/components/AdminPlatosTabla.js","modules/admin/screens/platos/AdminPlatosScreen.js","modules/admin/AdminRouter.js","services/authService.js","modules/auth/screens/login/AuthLoginScreen.js","modules/auth/AuthRouter.js","modules/invitado/screens/home/InvitadoHomeScreen.js","modules/invitado/InvitadoRouter.js","modules/pos/context/mesa/mesaContext.js","modules/pos/components/PosCategorias.js","modules/pos/components/PosComandaItem.js","modules/pos/components/PosComanda.js","assets/img/logo.svg","assets/img/search.svg","modules/pos/components/PosHeader.js","services/mesasService.js","modules/pos/components/PosMesa.js","modules/pos/components/PosMesas.js","assets/img/plato_blanco.svg","modules/pos/components/PosNavigation.js","modules/pos/components/PosPlato.js","modules/pos/components/PosPlatos.js","modules/pos/screens/control/PosControlScreen.js","modules/pos/context/mesa/mesaReducer.js","services/pedidosService.js","modules/pos/context/mesa/mesaState.js","modules/pos/PosRouter.js","AppRouter.js","modules/auth/context/authReducer.js","modules/auth/context/authState.js","App.js","index.js"],"names":["AuthContext","createContext","RutaPrivada","path","Componente","componente","useContext","autenticado","cargando","className","component","to","AdminHeader","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","AdminDashboardScreen","AdminPedidosScreen","URL_BACKEND","getPlatos","a","fetch","peticion","json","data","postPlatoSinImagen","objPlato","method","headers","body","JSON","stringify","postImagenByPlatoId","plato_id","archivo","formData","FormData","append","getCategorias","getPlatosByCategoriaId","categoria_id","formularioVacio","plato_nom","plato_pre","AdminPlatosForm","traerPlatos","useState","formulario","setFormulario","categorias","setCategorias","archivoRef","useRef","traerCategorias","ok","content","useEffect","handleChange","e","target","name","value","onSubmit","preventDefault","Swal","fire","title","text","icon","showConfirmButton","allowOutsideClick","plato_img","then","current","files","rpta","timer","htmlFor","onChange","map","categoria","categoria_nom","ref","AdminPlatosTabla","platos","plato","src","alt","width","Categorium","AdminPlatosScreen","setPlatos","AdminRouter","postLogin","correo","password","verificarToken","token","AuthLoginScreen","history","iniciarSesion","push","AuthRouter","InvitadoHomeScreen","style","minHeight","display","justifyContent","alignItems","flexDirection","InvitadoRouter","MesaContext","PosCategorias","setCargando","globalObjCategoria","seleccionarCategoriaGlobal","objCategoria","onClick","PosComandaItem","plato_cant","PosComanda","pedidoActual","globalPedidos","globalObjMesa","globalPagar","find","pedido","mesa_id","showCancelButton","isConfirmed","withRouter","usu_nom","cerrarSesion","logoSVG","searchSVG","replace","getMesas","PosMesa","objMesa","seleccionarMesaGlobal","clase","mesa_nro","PosMesas","mesas","setMesas","traerMesas","PosNavigation","platoSVG","PosPlato","agregarPlato","restarPlato","PosPlatos","traerPlatosPorCategoriaId","Platos","PosControlScreen","MesaReducer","stateActual","action","postPedido","objPedido","MesaState","props","useReducer","state","dispatch","Provider","nuevoGlobalPedidos","total","filter","length","pedidoplatos","pedidoplato_cant","usu_id","pedido_est","pedido_nro","pedido_fech","moment","format","console","log","children","PosRouter","AppRouter","exact","AuthReducer","localStorage","removeItem","AuthState","getItem","payload","split","payloadDesencriptado","window","atob","payloadJSON","parse","iniciarSesionConLocalStorage","setItem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ada1cf9.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst AuthContext = createContext();\r\nexport default AuthContext;","import React, { useContext } from 'react'\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthContext from './modules/auth/context/authContext';\r\n\r\nconst RutaPrivada = ({ path, componente: Componente }) => {\r\n\r\n  const { autenticado, cargando } = useContext(AuthContext);\r\n\r\n  return (\r\n    cargando ?\r\n      <h1 className=\"display-4\">\r\n        Cargando...\r\n      </h1> :\r\n      autenticado ?\r\n        <Route path={path} component={Componente} /> :\r\n        <Redirect to={\"/\"} />\r\n  )\r\n}\r\n\r\nexport default RutaPrivada\r\n","import React from 'react'\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"!#\">Navbar</a>\r\n      <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"!#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"!#\">Link</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"!#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n              <a className=\"dropdown-item\" href=\"!#\">Action 1</a>\r\n              <a className=\"dropdown-item\" href=\"!#\">Action 2</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default AdminHeader\r\n","import React from 'react'\r\n\r\nconst AdminDashboardScreen = () => {\r\n  return (\r\n    <div>\r\n      MOSTRANDO LA VISTA ADMINDASHBOARDSCREEN\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboardScreen\r\n","import React from 'react'\r\n\r\nconst AdminPedidosScreen = () => {\r\n  return (\r\n    <div>\r\n      MOSTRANDO LA VISTA DE LOS PEDIDOS SCREEN\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPedidosScreen\r\n","export const URL_BACKEND = \"https://codigo4-pos.herokuapp.com\";","import { URL_BACKEND } from \"../environments/environmets\"\r\n\r\nexport const getPlatos = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/plato`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\n\r\nexport const postPlatoSinImagen = async (objPlato) => {\r\n  const peticion = await fetch(`${URL_BACKEND}/plato`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(objPlato)\r\n  });\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\n\r\n\r\n\r\nexport const postImagenByPlatoId = async (plato_id, archivo) => {\r\n\r\n  let formData = new FormData();\r\n  formData.append(\"plato_id\", plato_id);\r\n  formData.append(\"imagen\", archivo);\r\n\r\n  const peticion = await fetch(`${URL_BACKEND}/imagen/upload`, {\r\n    method: \"POST\",\r\n    body: formData\r\n  });\r\n  const data = await peticion.json();\r\n  return data;\r\n\r\n}","import { URL_BACKEND } from \"../environments/environmets\"\r\n\r\nexport const getCategorias = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/categoria`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}\r\n\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n\r\n  const peticion = await fetch(`${URL_BACKEND}/categoria/${categoria_id}/platos`);\r\n  const data = await peticion.json();\r\n  return data;\r\n\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport { getCategorias } from '../../../../../services/categoriasService';\r\nimport { postImagenByPlatoId, postPlatoSinImagen } from '../../../../../services/platosService';\r\n\r\nconst formularioVacio = {\r\n  plato_nom: \"\",\r\n  plato_pre: 0,\r\n  categoria_id: 0\r\n}\r\n\r\nconst AdminPlatosForm = ({ traerPlatos }) => {\r\n\r\n  const [formulario, setFormulario] = useState(formularioVacio);\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  // archivoRef será una variable que puede ser uasada para tomar un elemento del DOM\r\n  // es decir, vincular un elemento del DOM con una variable(como un getElementById)\r\n  // NOTA: el elemento vinculado del DOM se encontrará en el objeto:\r\n  // archivoRef.current\r\n  const archivoRef = useRef();\r\n\r\n  const traerCategorias = async () => {\r\n    const data = await getCategorias();\r\n    if (data.ok) {\r\n      setCategorias(data.content);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerCategorias();\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    Swal.fire({\r\n      title: \"Espere...\",\r\n      text: \"Estamos subiendo la información al servidor\",\r\n      icon: \"info\",\r\n      showConfirmButton: false,\r\n      // deniega el derecho de hacer click fuera del cuadro de Sweetalert\r\n      // En este caso, la única forma de cerrar éste sweetalert\r\n      // será lanzando otro sweetalert que sí se pueda cancelar o cerrar\r\n      allowOutsideClick: false\r\n    })\r\n\r\n    const objPlato = {\r\n      ...formulario,\r\n      plato_img: \"\"\r\n    };\r\n\r\n    postPlatoSinImagen(objPlato).then(data => {\r\n      if (data.ok) {\r\n\r\n        const plato_id = data.content.plato_id;\r\n\r\n        postImagenByPlatoId(plato_id, archivoRef.current.files[0])\r\n          .then(rpta => {\r\n            if (rpta.ok) {\r\n              traerPlatos();\r\n              setFormulario(formularioVacio);\r\n              // quitar la imagen del input file\r\n              archivoRef.current.value = \"\";\r\n              Swal.fire({\r\n                title: \"Hecho!\",\r\n                icon: \"success\",\r\n                text: \"El plato y su imagen fueron creados con éxito\",\r\n                timer: 1500,\r\n                showConfirmButton: false\r\n              });\r\n            }\r\n          })\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"row mb-4\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Nombre del Plato</label>\r\n                <input type=\"text\" placeholder=\"Ejm: Cebiche\"\r\n                  className=\"form-control\" name=\"plato_nom\"\r\n                  value={formulario.plato_nom}\r\n                  onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Precio del Plato:</label>\r\n                <input type=\"number\" className=\"form-control\"\r\n                  value={formulario.plato_pre} onChange={handleChange}\r\n                  name=\"plato_pre\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Seleccione Categoría</label>\r\n                <select name=\"categoria_id\" className=\"form-control\"\r\n                  value={formulario.categoria_id} onChange={handleChange}>\r\n                  <option value=\"0\">--Seleccione Categoría--</option>\r\n                  {\r\n                    categorias.map(categoria => {\r\n                      return (\r\n                        <option value={categoria.categoria_id}\r\n                          key={categoria.categoria_id}>\r\n                          {categoria.categoria_nom}\r\n                        </option>\r\n                      )\r\n                    })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Imagen del plato:</label>\r\n                {/* ref es una propiedad de todo elemento del DOM de REACT para \r\n                relacionar una variable creada con useRef() para su manipulación*/}\r\n                <input type=\"file\" className=\"form-control\" ref={archivoRef} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Crear Plato\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPlatosForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getPlatos } from '../../../../../services/platosService';\r\n\r\nconst AdminPlatosTabla = ({ platos }) => {\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">\r\n              <table className=\"table table-hover table-bordered table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Nombre</th>\r\n                    <th>Precio</th>\r\n                    <th>Imagen Plato</th>\r\n                    <th>Categoria</th>\r\n                    <th>Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  {\r\n                    platos.map(plato => (\r\n                      <tr key={plato.plato_id}>\r\n                        <td>{plato.plato_id}</td>\r\n                        <td>{plato.plato_nom}</td>\r\n                        <td>{plato.plato_pre}</td>\r\n                        <td>\r\n                          <img src={plato.plato_img} alt=\"imagen del plato\" width=\"150\" />\r\n                        </td>\r\n                        <td>\r\n                          {plato.Categorium.categoria_nom}\r\n                        </td>\r\n                        <td>Acciones</td>\r\n                      </tr>\r\n                    ))\r\n                  }\r\n\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPlatosTabla\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getPlatos } from '../../../../services/platosService';\r\nimport AdminPlatosForm from './components/AdminPlatosForm'\r\nimport AdminPlatosTabla from './components/AdminPlatosTabla'\r\n\r\nconst AdminPlatosScreen = () => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n\r\n  const traerPlatos = async () => {\r\n    const data = await getPlatos();\r\n    if (data.ok) {\r\n      setPlatos(data.content);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerPlatos();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <AdminPlatosForm traerPlatos={traerPlatos} />\r\n      <AdminPlatosTabla platos={platos} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminPlatosScreen\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport RutaPrivada from '../../RutaPrivada'\r\nimport AdminHeader from './components/AdminHeader'\r\nimport AdminDashboardScreen from './screens/dashboard/AdminDashboardScreen'\r\nimport AdminPedidosScreen from './screens/pedidos/AdminPedidosScreen'\r\nimport AdminPlatosScreen from './screens/platos/AdminPlatosScreen'\r\n\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <main className=\"container pt-5\">\r\n        <Switch>\r\n\r\n          <RutaPrivada path={\"/admin/platos\"} componente={AdminPlatosScreen} />\r\n          \r\n          {/* <Route path={\"/admin/platos\"} component={AdminPlatosScreen} /> */}\r\n\r\n          <Route path={\"/admin/pedidos\"} component={AdminPedidosScreen} />\r\n          <Route path={\"/admin\"} component={AdminDashboardScreen} />\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminRouter\r\n","\r\nimport { URL_BACKEND } from \"./../environments/environmets\"\r\n\r\nexport const postLogin = async (correo, password) => {\r\n\r\n  const peticion = await fetch(`${URL_BACKEND}/login`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      correo: correo, password: password\r\n    }),\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n\r\n  const data = await peticion.json();\r\n  return data;\r\n\r\n}\r\n\r\nexport const verificarToken = async (token) => {\r\n  const peticion = await fetch(`${URL_BACKEND}/verificar`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`\r\n    }\r\n  });\r\n  const data = await peticion.json();\r\n  return data;\r\n}","import React, { useContext, useState } from 'react'\r\nimport { postLogin } from '../../../../services/authService';\r\nimport AuthContext from '../../context/authContext';\r\n\r\nconst AuthLoginScreen = ({ history }) => {\r\n\r\n  const { iniciarSesion } = useContext(AuthContext);\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    correo: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    postLogin(formulario.correo, formulario.password).then(data => {\r\n      if (data.ok) {\r\n        //TODO llamar a iniciarSesión del context y enviarle el token\r\n        iniciarSesion(data.token);\r\n        history.push(\"/pos/control\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={onSubmit}>\r\n          <label htmlFor=\"\">Email:</label>\r\n          <input\r\n            name=\"correo\"\r\n            onChange={handleChange}\r\n            value={formulario.correo}\r\n            type=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\" />\r\n          <label htmlFor=\"\">Password:</label>\r\n          <input\r\n            value={formulario.password}\r\n            onChange={handleChange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default AuthLoginScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport AuthLoginScreen from './screens/login/AuthLoginScreen';\r\n\r\nimport \"./../../sass/login.scss\";\r\n\r\nconst AuthRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={\"/auth\"} component={AuthLoginScreen} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AuthRouter\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InvitadoHomeScreen = () => {\r\n  return (\r\n    <div className=\"bg-dark\" style={{\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\"\r\n    }}>\r\n      <h1 className=\"display-1 text-white\">Home de CodiGo - POS</h1>\r\n      <Link className=\"btn btn-outline-success btn-lg\" to={\"/auth\"}>\r\n        Ir a Login\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvitadoHomeScreen\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport InvitadoHomeScreen from './screens/home/InvitadoHomeScreen'\r\n\r\nconst InvitadoRouter = () => {\r\n  return (\r\n    <Switch>\r\n      \r\n      <Route path={\"/\"} component={InvitadoHomeScreen} />\r\n\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default InvitadoRouter\r\n","import { createContext } from \"react\";\r\n\r\nconst MesaContext = createContext();\r\n\r\nexport default MesaContext;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { getCategorias } from '../../../services/categoriasService';\r\nimport MesaContext from '../context/mesa/mesaContext';\r\n\r\nconst PosCategorias = () => {\r\n\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const {\r\n    globalObjCategoria,\r\n    seleccionarCategoriaGlobal\r\n  } = useContext(MesaContext);\r\n\r\n  const traerCategorias = async () => {\r\n    const data = await getCategorias();\r\n    if (data.ok) {\r\n      setCategorias(data.content);\r\n      setCargando(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    traerCategorias();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"carta__categorias\">\r\n      {\r\n        cargando ? <span>Cargando...</span> :\r\n          categorias.map(objCategoria => (\r\n            <button key={objCategoria.categoria_id}\r\n              className={`boton boton-outline-primary \r\n                ${globalObjCategoria?.categoria_id === objCategoria.categoria_id ? \"activo\" : \"\"}`}\r\n\r\n              onClick={() => {\r\n                seleccionarCategoriaGlobal({ ...objCategoria })\r\n              }}>\r\n              {objCategoria.categoria_nom}\r\n            </button>\r\n          ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosCategorias\r\n","import React from 'react'\r\n\r\nconst PosComandaItem = ({ plato }) => {\r\n  return (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span><strong>{plato.plato_nom}</strong></span>\r\n        <span>Precio: S/ {plato.plato_pre}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{plato.plato_cant}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>S/ {+plato.plato_cant * +plato.plato_pre}</strong>\r\n      </p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosComandaItem\r\n","import React, { useContext } from 'react'\r\nimport MesaContext from '../context/mesa/mesaContext';\r\nimport PosComandaItem from './PosComandaItem'\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst PosComanda = () => {\r\n\r\n  const { globalPedidos, globalObjMesa, globalPagar } = useContext(MesaContext);\r\n\r\n  let pedidoActual;\r\n\r\n  if (globalObjMesa) {\r\n    pedidoActual = globalPedidos.find(pedido => pedido.mesa_id === globalObjMesa.mesa_id);\r\n  }\r\n  return (\r\n    <div className=\"comanda\">\r\n      <h4 className=\"comanda__mesa\">Mesa 01</h4>\r\n      <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n      <hr />\r\n\r\n      <ul className=\"comanda__lista\">\r\n        {\r\n          globalObjMesa ?\r\n            pedidoActual ?\r\n              pedidoActual.platos.map(plato => {\r\n                return <PosComandaItem key={plato.plato_id} plato={plato} />\r\n              })\r\n              :\r\n              <span>Esta mesa no tiene pedidos</span>\r\n            :\r\n            <span>No se ha seleccionado ninguna mesa 🙄</span>\r\n        }\r\n      </ul>\r\n      <button className=\"boton boton-success boton-block\" onClick={() => {\r\n        if (!globalObjMesa) return;\r\n\r\n        Swal.fire({\r\n          title: \"Confirmar Pago\",\r\n          text: \"Los cambios se harán efecto en la base de datos\",\r\n          icon: \"question\",\r\n          showCancelButton: true\r\n        }).then(({ isConfirmed }) => {\r\n          if (isConfirmed) {\r\n            globalPagar();\r\n          }\r\n        })\r\n\r\n      }}>\r\n        PAGAR\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosComanda\r\n","export default __webpack_public_path__ + \"static/media/logo.32d5c4da.svg\";","export default __webpack_public_path__ + \"static/media/search.c031f9ef.svg\";","import React, { useContext } from 'react'\r\nimport AuthContext from '../../auth/context/authContext';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport logoSVG from \"./../../../assets/img/logo.svg\";\r\nimport searchSVG from \"./../../../assets/img/search.svg\";\r\n\r\nconst PosHeader = ({ history }) => {\r\n  const { usu_nom, cerrarSesion } = useContext(AuthContext);\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src={logoSVG} alt=\"\" />\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src={searchSVG} alt=\"\" />\r\n        <input type=\"text\" className=\"header__input\" placeholder=\"Busca un término\" />\r\n      </div>\r\n      <div className=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>{usu_nom}</span>\r\n\r\n        <button className=\"btn btn-outline-danger\" onClick={() => {\r\n          cerrarSesion();\r\n          history.replace(\"/\");\r\n        }}>\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default withRouter(PosHeader);\r\n","\r\nimport { URL_BACKEND } from \"./../environments/environmets\";\r\n\r\nexport const getMesas = async () => {\r\n  const peticion = await fetch(`${URL_BACKEND}/mesa`);\r\n  const data = await peticion.json();\r\n  return data;\r\n}","import React, { useContext } from 'react'\r\nimport MesaContext from '../context/mesa/mesaContext';\r\n\r\nconst PosMesa = ({ objMesa }) => {\r\n\r\n  const { globalObjMesa, seleccionarMesaGlobal } = useContext(MesaContext);\r\n\r\n  ////// alternativa para colocar la clase \"activo\"\r\n\r\n  let clase = \"\";\r\n  if (globalObjMesa?.mesa_id === objMesa.mesa_id) {\r\n    clase = \"activo\";\r\n  }\r\n\r\n  return (\r\n    <li className={`mesas__mesa ${clase}`} onClick={() => {\r\n      seleccionarMesaGlobal({ ...objMesa });\r\n    }}>\r\n      <span className=\"mesas__titulo\">Mesa</span>\r\n      <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PosMesa\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getMesas } from '../../../services/mesasService';\r\nimport PosMesa from './PosMesa'\r\n\r\nconst PosMesas = () => {\r\n\r\n  const [mesas, setMesas] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const traerMesas = async () => {\r\n    const rpta = await getMesas();\r\n    if (rpta.ok) {\r\n      setMesas(rpta.content);\r\n      setCargando(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerMesas();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {\r\n          cargando === true ? <span>cargando...</span> :\r\n            mesas.map(objMesa => (\r\n              <PosMesa key={objMesa.mesa_id} objMesa={objMesa} />\r\n            ))\r\n        }\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosMesas\r\n","export default __webpack_public_path__ + \"static/media/plato_blanco.255e60bc.svg\";","import React from 'react'\r\nimport platoSVG from \"./../../../assets/img/plato_blanco.svg\";\r\nconst PosNavigation = () => {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        <li>\r\n          <img src={platoSVG} alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src={platoSVG} alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src={platoSVG} alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src={platoSVG} alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default PosNavigation\r\n","import React, { useContext } from 'react'\r\nimport MesaContext from '../context/mesa/mesaContext';\r\n\r\nconst PosPlato = ({ objPlato }) => {\r\n\r\n  const { agregarPlato, restarPlato } = useContext(MesaContext);\r\n\r\n  return (\r\n    <div className=\"carta__plato\">\r\n      <img src={objPlato.plato_img} alt=\"imagen del plato\" />\r\n      <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n      <span className=\"carta__precio\">S/ {objPlato.plato_pre}</span>\r\n      <div className=\"carta__botones\">\r\n        <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => {\r\n            restarPlato({ ...objPlato });\r\n          }}>\r\n          -1\r\n        </button>\r\n        <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            agregarPlato({ ...objPlato });\r\n          }}\r\n        >+1</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlato\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { getPlatosByCategoriaId } from '../../../services/categoriasService';\r\nimport PosPlato from './PosPlato'\r\nimport MesaContext from \"./../context/mesa/mesaContext\";\r\n\r\nconst PosPlatos = () => {\r\n\r\n  const [platos, setPlatos] = useState([]);\r\n  const { globalObjCategoria } = useContext(MesaContext);\r\n\r\n  const traerPlatosPorCategoriaId = async (categoria_id) => {\r\n    const data = await getPlatosByCategoriaId(categoria_id);\r\n    setPlatos(data.content.Platos);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (globalObjCategoria !== null) {\r\n      traerPlatosPorCategoriaId(globalObjCategoria.categoria_id)\r\n    }\r\n  }, [globalObjCategoria])\r\n\r\n  return (\r\n    <div className=\"carta__platos\">\r\n      {\r\n        platos.map(objPlato => {\r\n          return <PosPlato key={objPlato.plato_id} objPlato={objPlato} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PosPlatos\r\n","import React from 'react'\r\nimport PosCategorias from '../../components/PosCategorias'\r\nimport PosComanda from '../../components/PosComanda'\r\nimport PosHeader from '../../components/PosHeader'\r\nimport PosMesas from '../../components/PosMesas'\r\nimport PosNavigation from '../../components/PosNavigation'\r\nimport PosPlatos from '../../components/PosPlatos'\r\n\r\nconst PosControlScreen = () => {\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n      <main className=\"pos-container\">\r\n        <PosNavigation />\r\n        <section className=\"tabla\">\r\n          <PosMesas />\r\n          <div className=\"pedido\">\r\n            <div className=\"carta\">\r\n              <PosCategorias />\r\n              <PosPlatos />\r\n            </div>\r\n            <div className=\"boleta\">\r\n              <h3>Pedido</h3>\r\n              <PosComanda />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PosControlScreen\r\n","const MesaReducer = (stateActual, action) => {\r\n\r\n  switch (action.type) {\r\n    case \"SELECCIONAR_MESA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjMesa: { ...action.data }\r\n      }\r\n    case \"SELECCIONAR_CATEGORIA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjCategoria: { ...action.data }\r\n      }\r\n    case \"ACTUALIZAR_GLOBAL_PEDIDOS\":\r\n      return {\r\n        ...stateActual,\r\n        globalPedidos: [...action.data]\r\n      }\r\n  }\r\n}\r\nexport default MesaReducer;","import { URL_BACKEND } from \"./../environments/environmets\";\r\n\r\nexport const postPedido = async (objPedido) => {\r\n  const peticion = await fetch(`${URL_BACKEND}/pedido`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(objPedido)\r\n  });\r\n  const data = await peticion.json();\r\n  return data;\r\n}","import React, { useReducer } from 'react'\r\nimport MesaContext from './mesaContext'\r\nimport MesaReducer from './mesaReducer';\r\nimport moment from \"moment\";\r\nimport { postPedido } from '../../../../services/pedidosService';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst MesaState = (props) => {\r\n\r\n  const [state, dispatch] = useReducer(MesaReducer, {\r\n    globalObjMesa: null,\r\n    globalObjCategoria: null,\r\n    globalPedidos: []\r\n  });\r\n\r\n  // función que se ejecutará con el botón de \"+1\"\r\n  // de cualquier plato\r\n  const agregarPlato = (objPlato) => {\r\n    const { globalObjMesa, globalPedidos } = state;\r\n    // Verificar que tenemos una mesa seleccionada globalmente\r\n    if (globalObjMesa === null) return;\r\n    // obtener el pedido actual que pertence a la mesa global seleccionada\r\n    // en el arreglo global pedidos\r\n    const pedidoActual =\r\n      globalPedidos.find(objPedido => objPedido.mesa_id === globalObjMesa.mesa_id);\r\n    // preguntamos si el pedidoActual existe, es decir, que la mesa gobal seleccionada\r\n    // tenga un pedido previamente en nuestro arreglo \"globalPedidos\"\r\n    if (pedidoActual) {\r\n      // La mesa global seleccionada, ya tenia un pedido \r\n\r\n      // vamos a verificar si la mesa seleccionada ya tenía el plato que estamos\r\n      // recibiendo por parámetros\r\n\r\n      const platoExistente = pedidoActual.platos.find(plato => plato.plato_id === objPlato.plato_id);\r\n      if (platoExistente) {\r\n        // el plato que quiero aumentar ya existía en el pedido de la mesa actual\r\n        const nuevoGlobalPedidos = globalPedidos.map(pedido => {\r\n          if (pedido.mesa_id === globalObjMesa.mesa_id) {\r\n            pedido.platos.map(plato => {\r\n              if (plato.plato_id === objPlato.plato_id) {\r\n                plato.plato_cant++;\r\n              }\r\n              return plato;\r\n            })\r\n          }\r\n          return pedido;\r\n        })\r\n\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: nuevoGlobalPedidos\r\n        })\r\n\r\n\r\n      } else {\r\n        // la mesa tenía pedidos, pero no tenía ninguna unidad del plato que quiero agregar\r\n        // 1. mapeando el arreglo global de pedidos\r\n        const nuevoGlobalPedidos = globalPedidos.map(pedido => {\r\n          //2. cuando encuentre el pedido de la mesa actual seleccionada\r\n          if (pedido.mesa_id === globalObjMesa.mesa_id) {\r\n            //3. cuando encuentro el pedido de la mesa seleccionada, a su arreglo de platos,\r\n            // le agrego el nuevo plato con una unidad\r\n            pedido.platos.push({\r\n              ...objPlato,\r\n              plato_cant: 1\r\n            });\r\n          }\r\n          return pedido;\r\n        })\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: nuevoGlobalPedidos\r\n        })\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      // La mesa global seleccionada, no tenía un pedido, estaba vacía\r\n      // por ende, debemos crear el pedido nuevo en el arreglo global de pedidos\r\n      // con la mesa global seleccionada, y el plato \"objPlato\" con cantidad = 1\r\n      const nuevoGlobalPedidos = [\r\n        ...globalPedidos,\r\n        {\r\n          total: objPlato.plato_pre,\r\n          mesa_id: globalObjMesa.mesa_id,\r\n          platos: [\r\n            {\r\n              ...objPlato,\r\n              plato_cant: 1\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n      dispatch({\r\n        type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n        data: nuevoGlobalPedidos\r\n      });\r\n    }\r\n\r\n\r\n\r\n  }\r\n  const restarPlato = (objPlato) => {\r\n\r\n    let { globalPedidos, globalObjMesa } = state;\r\n    if (globalObjMesa === null) return;\r\n\r\n    // buscamos un pedido que corresponda a la mesa seleccionada global\r\n    let pedidoActual = globalPedidos.find(pedido => pedido.mesa_id === globalObjMesa.mesa_id);\r\n    if (pedidoActual) {\r\n      // significa que sí existe un pedido para la mesa actual\r\n      // Ahora, verificamos si el plato que estoy restando, existe en el arreglo de platos\r\n      // del pedido actual.\r\n      pedidoActual.platos = pedidoActual.platos.filter(plato => {\r\n        if (plato.plato_id === objPlato.plato_id) {\r\n          // significa que encontré el plato que estoy tratando de restar\r\n          // Ahora, analizaremos si el plato, sólo tenía un ítem o tenía más items\r\n          if (plato.plato_cant === 1) {\r\n            // Cuando estamos dentro del método filter(),\r\n            // retornar undefined, es como no retornar el elemento , es decir, \r\n            // dejamos de retornar el plato de la lista de platos.\r\n            return undefined;\r\n          } else {\r\n            plato.plato_cant--;\r\n            return plato;\r\n          }\r\n        }\r\n        return plato;\r\n      })\r\n\r\n      // luego de descontar un plato, cabe la posibilidad de que el arreglo de platos del\r\n      // pedido actual de la mesa seleccionada ya no tenga elementos (platos)...\r\n      // de ser caso, con la siguiente instrucción, eliminamos a ese pedido \r\n      // del arreglo global de pedidos para evitar que la mesa tenga un petido con 0 platos.\r\n      if (pedidoActual.platos.length === 0) {\r\n        globalPedidos = globalPedidos.filter(pedido => pedido.mesa_id !== globalObjMesa.mesa_id)\r\n      }\r\n\r\n      dispatch({\r\n        type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n        data: globalPedidos\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n  const seleccionarMesaGlobal = (objMesa) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_MESA\",\r\n      data: { ...objMesa }\r\n    });\r\n  }\r\n  const seleccionarCategoriaGlobal = (objCategoria) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_CATEGORIA\",\r\n      data: { ...objCategoria }\r\n    })\r\n  }\r\n\r\n  const globalPagar = () => {\r\n\r\n    const pedidoActual = state.globalPedidos.find(pedido => state.globalObjMesa.mesa_id === pedido.mesa_id);\r\n\r\n    const pedidoplatos = pedidoActual.platos.map(plato => ({\r\n      plato_id: plato.plato_id,\r\n      pedidoplato_cant: plato.plato_cant\r\n    }));\r\n\r\n    const objPedido = {\r\n      usu_id: 1,\r\n      mesa_id: state.globalObjMesa.mesa_id,\r\n      pedido_est: \"pagado\",\r\n      pedido_nro: \"100\",\r\n      pedido_fech: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n      pedidoplatos\r\n    };\r\n\r\n    postPedido(objPedido).then(data => {\r\n\r\n      console.log(data);\r\n      if (data.ok) {\r\n        Swal.fire({\r\n          title: \"Pago Registrado!\",\r\n          text: \"El pago se ha realizado exitosamente\",\r\n          icon: \"success\",\r\n          timer: 1500,\r\n          showConfirmButton: false\r\n        })\r\n        \r\n        const nuevoGlobalPedidos =\r\n          state.globalPedidos.filter(pedido => pedido.mesa_id !== state.globalObjMesa.mesa_id);\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: nuevoGlobalPedidos\r\n        });\r\n\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <MesaContext.Provider value={{\r\n      globalObjMesa: state.globalObjMesa,\r\n      globalObjCategoria: state.globalObjCategoria,\r\n      globalPedidos: state.globalPedidos,\r\n      seleccionarMesaGlobal,\r\n      seleccionarCategoriaGlobal,\r\n      agregarPlato,\r\n      restarPlato,\r\n      globalPagar\r\n    }}>\r\n      {props.children}\r\n    </MesaContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MesaState\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport PosControlScreen from './screens/control/PosControlScreen'\r\nimport \"./../../sass/pos.scss\";\r\nimport MesaState from './context/mesa/mesaState';\r\nimport RutaPrivada from '../../RutaPrivada';\r\n\r\nconst PosRouter = () => {\r\n  return (\r\n    <MesaState>\r\n      <Switch>\r\n        <RutaPrivada path={\"/pos/control\"} componente={PosControlScreen} />\r\n      </Switch >\r\n    </MesaState >\r\n\r\n  )\r\n}\r\n\r\nexport default PosRouter\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport AdminRouter from './modules/admin/AdminRouter';\r\nimport AuthRouter from './modules/auth/AuthRouter';\r\nimport InvitadoRouter from './modules/invitado/InvitadoRouter';\r\nimport PosRouter from './modules/pos/PosRouter';\r\nconst AppRouter = () => {\r\n  return (\r\n\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path={\"/pos\"} component={PosRouter} />\r\n        <Route path={\"/admin\"} component={AdminRouter} />\r\n        <Route path={\"/auth\"} component={AuthRouter} />\r\n        <Route path={\"/\"} exact component={InvitadoRouter} />\r\n      </Switch>\r\n    </HashRouter>\r\n\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","const AuthReducer = (stateActual, action) => {\r\n  switch (action.type) {\r\n    case \"INICIAR_SESION\":\r\n      return {\r\n        ...stateActual,\r\n        usu_id: action.data.usu_id,\r\n        usu_nom: action.data.usu_nom,\r\n        token: action.data.token,\r\n        autenticado: true,\r\n        cargando: false\r\n      }\r\n    case \"CERRAR_SESION\":\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...stateActual,\r\n        usu_id: null,\r\n        usu_nom: null,\r\n        token: null,\r\n        autenticado: false,\r\n        cargando: false\r\n      }\r\n  }\r\n}\r\nexport default AuthReducer;","import React, { useEffect, useReducer } from 'react'\r\nimport { verificarToken } from '../../../services/authService';\r\nimport AuthContext from './authContext'\r\nimport AuthReducer from './authReducer';\r\n\r\nconst AuthState = (props) => {\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, {\r\n    autenticado: false,\r\n    usu_nom: null,\r\n    usu_id: null,\r\n    token: null,\r\n    cargando: true\r\n  });\r\n\r\n  const iniciarSesionConLocalStorage = () => {\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      // verificar el token con el backend\r\n      verificarToken(token).then(data => {\r\n        if (data.ok) {\r\n          const payload = token.split(\".\")[1];\r\n          const payloadDesencriptado = window.atob(payload);\r\n          const payloadJSON = JSON.parse(payloadDesencriptado);\r\n          dispatch({\r\n            type: \"INICIAR_SESION\",\r\n            data: {\r\n              ...payloadJSON,\r\n              token: token\r\n            }\r\n          })\r\n        }\r\n        else {\r\n          dispatch({\r\n            type: \"CERRAR_SESION\",\r\n          })\r\n        }\r\n      })\r\n\r\n    } else {\r\n      dispatch({\r\n        type: \"CERRAR_SESION\"\r\n      })\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    iniciarSesionConLocalStorage();\r\n  }, []);\r\n\r\n  /**\r\n   * Función que será llamada desde el formulario, luego de que el inicio de sesión\r\n   * sea correcto,\r\n   * ésta función recibirá el token y actualizará el estado global de la aplicación con \r\n   * la información del usuario\r\n   */\r\n  const iniciarSesion = (token) => {\r\n    // la función split devuelve un arreglo de subcadenas dado el separador\r\n    // ejm en el caso del token\r\n    // 12323rwef.34234f4.asefe\r\n    // resultado: [\"12323rwef\",\"34234f4\",\"asefe\"]\r\n    const payload = token.split(\".\")[1];\r\n    // vamos a desencriptar el payload que está en base-64\r\n    // window.atob(\"cadenaencriptada\") desencripta una cadena en base-64\r\n    const payloadDesencriptado = window.atob(payload);\r\n    const payloadJSON = JSON.parse(payloadDesencriptado);\r\n    localStorage.setItem(\"token\", token);\r\n    dispatch({\r\n      type: \"INICIAR_SESION\",\r\n      data: {\r\n        ...payloadJSON,\r\n        token: token\r\n      }\r\n    });\r\n  }\r\n\r\n  const cerrarSesion = () => {\r\n    dispatch({\r\n      type: \"CERRAR_SESION\"\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      usu_nom: state.usu_nom,\r\n      usu_id: state.usu_id,\r\n      autenticado: state.autenticado,\r\n      cargando: state.cargando,\r\n      iniciarSesion: iniciarSesion,\r\n      cerrarSesion: cerrarSesion\r\n    }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthState\r\n","import React from 'react'\nimport AppRouter from './AppRouter'\nimport AuthState from './modules/auth/context/authState'\n\nconst App = () => {\n  return (\n\n    <AuthState>\n      <AppRouter />\n    </AuthState>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}